import numpy as np
import pandas as pd
import os

metaFile = "/Users/Shared/wavelets/hilo/samples/HILO_MAIZE55_PARV50_meta.txt"
meta = pd.read_csv(metaFile,sep='\t',header=0)
symPops = meta.loc[meta['symp_allo']=='sympatric']['RI_ACCESSION'].unique().tolist()

indGenoDir="/Users/Shared/wavelets/hilo/local_ancestry/results/ancestry_hmm/HILO_MAIZE55/K2/Ne10000_yesBoot/posterior/"
symInds = [i.replace(".posterior","") for i in os.listdir(indGenoDir)]

chrLenFile="/Users/Shared/wavelets/hilo/data/refMaize/Zea_mays.AFPv4.dna.chr.autosome.lengths"
recMapFile="/Users/Shared/wavelets/hilo/linkage_map/results/ogut_2015_rmap_v2_to_v4_EXTENDED.txt"


rule all:
	input:
		expand("hmm_anc_interp/{distance}/{ind}.txt",ind=symInds,distance=['genetic','physical']),
		expand("wavelet_results/{popID}.RData",popID=symPops),
		"zea_1kb_rec.bed"

rule interpolate_hmm_ancestry:
	input:
		indFile = indGenoDir + "{ind}.posterior",
		chrLenFile=chrLenFile,
		recMapFile=recMapFile
	output:
		genetic="hmm_anc_interp/genetic/{ind}.txt",
		physical="hmm_anc_interp/physical/{ind}.txt"
	shell:
		"""
		Rscript --vanilla interpolate_hmm_ancestry.R {input.indFile} {wildcards.ind} {input.recMapFile} {input.chrLenFile} 'hmm_anc_interp/'
		"""
		# Rscript arguments 1. genotype posteriors probs for individual 2. individual ID 3. rec map file 4. chr length file 5. path for output

rule make_recMap_bed:
	input:
		recMapFile=recMapFile
	output:
		"zea_recMap.bed"
	shell:
		"""
		Rscript --vanilla zea_make_recMap_bed.R {input.recMapFile} | sort -k1,1 -k2,2n > {output}
		"""
rule make_kb_bed:
	input:
		chrLenFile=chrLenFile
	output:
		"zea_1kb.bed"
	shell:
		"""
		Rscript --vanilla make_1kb_bed.R {input.chrLenFile} | sort -k1,1 -k2,2n > {output}
		"""	

rule cm_per_kb:
	input:
		kb_bed="zea_1kb.bed",
		rec_bed="zea_recMap.bed"
	output:
		"zea_1kb_rec.bed"
	shell:
		"""
		bedmap --echo --delim "\t" --wmean --sci {input.kb_bed} {input.rec_bed} |\\
		awk '{{print $1 "\t" $2 "\t" $3 "\t" ($3-$2)*$4*100}}' > {output}
		"""

rule wavelets:
	input:
		metaFile=metaFile
	output:
		"wavelet_results/{popID}.RData"
	shell:
		"Rscript --vanilla zea_wavelets.R {input.metaFile} {wildcards.popID} 'hmm_anc_interp/genetic/' {output}" 
		# Rscript arguments 1. metaFile 2. population ID 3. path to individual ancestry files 4. outFile
		
